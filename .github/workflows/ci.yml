name: 🚀 CI
on:
  push:

jobs:
  lint:
    name: ⬣ ESLint
    runs-on: shopify-ubuntu-latest
    timeout-minutes: 15 
    concurrency:
      group: ci-lint-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🔬 Lint
        run: npm run lint

  typecheck:
    name: Typescript
    runs-on: shopify-ubuntu-latest
    timeout-minutes: 15 
    concurrency:
      group: ci-typecheck-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 💾 Turbo cache
        id: turbo-cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules/.cache/turbo
            **/.turbo
          key: turbo-${{ github.job }}-${{ github.ref_name }}-${{ github.sha }}
          restore-keys: |
            turbo-${{ github.job }}-${{ github.ref_name }}-

      - name: 📦 Build packages
        run: npm run build

      - name: ✅ Typecheck
        run: npm run typecheck

  test:
    name: ⚫️ Playwright tests
    runs-on: shopify-ubuntu-latest
    timeout-minutes: 15 
    concurrency:
      group: ci-test-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 💾 Turbo cache
        id: turbo-cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules/.cache/turbo
            **/.turbo
          key: turbo-${{ github.job }}-${{ github.ref_name }}-${{ github.sha }}
          restore-keys: |
            turbo-${{ github.job }}-${{ github.ref_name }}-

      - name: 📦 Build packages
        run: npm run build:pkg

      - name: 📄 Get installed Playwright version
        run: echo "PLAYWRIGHT_VERSION=$(npm ls @playwright/test | grep @playwright -m 1 | sed 's/.*@//')"  >> $GITHUB_ENV

      - name: 💾 Cache Playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}

      - name: 💽 Install Playwright Browsers (all)
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps
        working-directory: ./templates/demo-store

      - name: 💽 Install Playwright (only system deps)
        if: steps.playwright-cache.outputs.cache-hit == 'true'
        run: npx playwright install-deps
        working-directory: ./templates/demo-store

      - name: 🍄 Run Playwright tests
        run: npx playwright test
        working-directory: ./templates/demo-store

      - name: 🗒 Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: ./templates/demo-store/playwright-report/
          retention-days: 30
